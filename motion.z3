(declare-fun mult1 () Int)
(declare-fun in1 () Int)
(declare-fun in2 () Int)
(declare-fun mult2 () Int)
(declare-fun mult3 () Int)
(declare-fun in3 () Int)
(declare-fun mult4 () Int)
(declare-fun in4 () Int)
(declare-fun in5 () Int)
(declare-fun mult5 () Int)
(declare-fun mult6 () Int)
(declare-fun mult7 () Int)
(declare-fun in6 () Int)
(declare-fun mult8 () Int)
(declare-fun in7 () Int)
(declare-fun mult9 () Int)
(declare-fun in8 () Int)
(declare-fun mult10 () Int)
(declare-fun in9 () Int)
(declare-fun mult11 () Int)
(declare-fun mult12 () Int)
(declare-fun mult13 () Int)
(declare-fun mult14 () Int)
(declare-fun in10 () Int)
(declare-fun add1 () Int)
(declare-fun add2 () Int)
(declare-fun add3 () Int)
(declare-fun add4 () Int)
(declare-fun add5 () Int)
(declare-fun add6 () Int)
(declare-fun out1 () Int)
(assert (= mult1 (* in1 in2)))
(assert (= mult2 (* in1 10)))
(assert (= mult3 (* in3 16)))
(assert (= mult4 (* in4 in5)))
(assert (= mult5 (* in3 in2)))
(assert (= mult6 (* in2 in5)))
(assert (= mult7 (* in3 in6)))
(assert (= mult8 (* in4 in7)))
(assert (= mult9 (* in4 in8)))
(assert (= mult10 (* in6 in9)))
(assert (= mult11 (* in6 in8)))
(assert (= mult12 (* in7 in9)))
(assert (= mult13 (* in7 in8)))
(assert (= mult14 (* in9 in10)))
(assert (= add1 (* in1 mult2)))
(assert (= add2 (* 15 mult4)))
(assert (= add3 (* in5 mult8)))
(assert (= add4 (* mult10 in4)))
(assert (= add5 (* in10 mult14)))
(assert (= add6 (+ mult1 add1)))
(assert (= out1 add6))
(check-sat)
(get-model)
